task:
  #run_mode: train
  identifier: my_train_job
  parallel: False
  # If seed is not set, then it will be random every time
  seed: 12345678
  # Defaults to run directory if not specified
  save_dir: 
  # continue from a previous job
  continue_job: False
  # spefcify if the training state is loaded: epochs, learning rate, etc
  load_training_state: False
  # Path to the checkpoint.pt file
  checkpoint_path: 
  # E.g. [train, val, test]
  write_output: [val, test]
  # Frequency of writing to file; 0 denotes writing only at the end, 1 denotes writing every time
  output_frequency: 1
  # Frequency of saving model .pt file; 0 denotes saving only at the end, 1 denotes saving every time, -1 denotes never saving; this controls both checkpoint and best_checkpoint
  model_save_frequency: 1
  # Specify if labels are provided for the predict task
  # labels: True
  use_amp: False  

model:
  name: TorchMD_ET
  # model attributes
  hidden_channels: 128
  num_layers: 8
  num_rbf: 50
  activation: "silu"
  attn_activation: "silu"
  num_heads: 8
  num_post_layers: 1
  post_hidden_channels: 64
  pool: "global_add_pool"
  aggr: "add"
  dropout_rate: 0.0
  # Compute edge indices on the fly in the model forward
  otf_edge_index: True 
  # Compute edge attributes on the fly in the model forward
  otf_edge_attr: True  
  # Compute node attributes on the fly in the model forward
  otf_node_attr: False
  # compute gradients w.r.t to positions and cell, requires otf_edge_attr=True      
  gradient: True

dataset:  
  preprocess_params:
    # one of mdl (minimum image convention), ocp (all neighbors included)
    edge_calc_method: ocp 
    # determine if edges are computed, if false, then they need to be computed on the fly   
    preprocess_edges: False
    # determine if edge attributes are computed during processing, if false, then they need to be computed on the fly   
    preprocess_edge_features: False
    # determine if node attributes are computed during processing, if false, then they need to be computed on the fly   
    preprocess_node_features: True
    cutoff_radius : 8.0
    n_neighbors : 250
    num_offsets: 2
    # dimension of node attributes
    node_dim : 100
    # dimension of edge attributes
    edge_dim : 50
    self_loop: True
    # Method of obtaining atom dictionary: available: (onehot)
    node_representation: onehot    
    all_neighbors: True